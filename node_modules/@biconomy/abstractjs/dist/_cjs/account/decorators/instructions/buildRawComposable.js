"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildRawComposable = void 0;
const composabilityCalls_1 = require("../../../modules/utils/composabilityCalls.js");
const buildComposable_1 = require("./buildComposable.js");
const buildRawComposable = async (baseParams, parameters, composabilityParameters) => {
    const { currentInstructions = [] } = baseParams;
    const { to, calldata, gasLimit, value, chainId, metadata } = parameters;
    const { composabilityVersion } = composabilityParameters;
    if (calldata.length < 10 || !calldata.startsWith("0x")) {
        throw new Error("Invalid calldata");
    }
    const functionSig = calldata.slice(0, 10);
    const callDataEncodedArgs = `0x${calldata.slice(10)}`;
    let versionAgnosticComposableParams = [];
    if (callDataEncodedArgs.length !== 0) {
        versionAgnosticComposableParams =
            (0, composabilityCalls_1.prepareRawComposableParams)(callDataEncodedArgs);
    }
    const composableCall = (0, buildComposable_1.formatComposableCallWithVersion)(composabilityVersion, false, versionAgnosticComposableParams, functionSig, to, value, gasLimit);
    const defaultMetadata = [
        {
            type: "CUSTOM",
            description: "Custom composable on-chain action",
            chainId
        }
    ];
    return [
        ...currentInstructions,
        {
            calls: [composableCall],
            chainId,
            isComposable: true,
            metadata: metadata || defaultMetadata
        }
    ];
};
exports.buildRawComposable = buildRawComposable;
exports.default = exports.buildRawComposable;
//# sourceMappingURL=buildRawComposable.js.map