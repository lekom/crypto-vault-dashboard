"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.signFusionQuote = void 0;
const getQuoteType_1 = require("./getQuoteType.js");
const signMmDtkQuote_1 = require("./signMmDtkQuote.js");
const signOnChainQuote_1 = require("./signOnChainQuote.js");
const signPermitQuote_1 = require("./signPermitQuote.js");
const signFusionQuote = async (client, parameters) => {
    if ("delegatorSmartAccount" in parameters) {
        return (0, signMmDtkQuote_1.signMMDtkQuote)(client, parameters);
    }
    const signatureType = parameters.fusionQuote.quote.quoteType ||
        (await (0, getQuoteType_1.getQuoteType)(client, parameters.fusionQuote));
    switch (signatureType) {
        case "permit":
            return (0, signPermitQuote_1.signPermitQuote)(client, parameters);
        case "onchain":
            return (0, signOnChainQuote_1.default)(client, parameters);
        default:
            throw new Error("Invalid quote type for fusion quote");
    }
};
exports.signFusionQuote = signFusionQuote;
exports.default = exports.signFusionQuote;
//# sourceMappingURL=signFusionQuote.js.map