import type { Hash, OneOf } from "viem";
import type { BaseMeeClient } from "../../../../../clients/createMeeClient";
import type { Instruction, Simulation, SponsorshipOptionsParams } from "../../../../../clients/decorators/mee";
import type { FeeTokenInfo } from "../../../../../clients/decorators/mee";
import type { GrantMeePermissionPayload } from "./grantMeePermission";
export type UseMeePermissionParams = {
    mode: "ENABLE_AND_USE" | "USE";
    instructions: Instruction[];
    sessionDetails: GrantMeePermissionPayload;
    batch?: boolean;
    simulation?: Simulation;
    verificationGasLimit?: bigint;
} & OneOf<{
    feeToken: FeeTokenInfo;
} | {
    sponsorship: true;
    sponsorshipOptions?: SponsorshipOptionsParams;
}>;
export type UseMeePermissionPayload = {
    hash: Hash;
};
/**
 * Use a MEE Permission
 */
export declare const useMeePermission: (meeClient_: BaseMeeClient, parameters: UseMeePermissionParams) => Promise<UseMeePermissionPayload>;
//# sourceMappingURL=useMeePermission.d.ts.map