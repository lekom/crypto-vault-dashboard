import type { Address, Hex } from "viem";
import type { MeeClient } from "../../clients/createMeeClient";
import type { RuntimeValue } from "../../modules";
import type { MultichainSmartAccount } from "../toMultiChainNexusAccount";
/**
 * Parameters for withdrawing funds from gas tank
 */
export type WithdrawFromGasTankParams = {
    /**
     * The chainId of the gas tank
     * @example 1 // ETH
     */
    chainId: number;
    /**
     * The token address of asset supported in the gas tank
     * @example "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
     */
    tokenAddress: Address;
    /**
     * The amount to withdraw from gas tank
     * @example "1000" or "Runtime Balance"
     */
    amount: bigint | RuntimeValue;
    /**
     * The address where the tokens to be sent
     * @example "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
     */
    recipient: Address;
    /**
     * Mee client to interact with mee network
     */
    meeClient: MeeClient;
    /**
     * Block confirmations for the gas tank deployment
     * @example 1
     */
    confirmations?: number;
};
export type WithdrawFromGasTankPayload = {
    hash: Hex;
};
export declare const withdrawFromGasTank: (mcNexus: MultichainSmartAccount, parameters: WithdrawFromGasTankParams) => Promise<WithdrawFromGasTankPayload>;
export default withdrawFromGasTank;
//# sourceMappingURL=withdrawFromGasTank.d.ts.map