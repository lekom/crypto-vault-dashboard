import type { Address, Hex } from "viem";
import type { Instruction } from "../../../clients/decorators/mee";
import type { InstructionMetadata } from "../../../clients/decorators/mee/types/instruction-metadata.type";
import type { RuntimeValue } from "../../../modules/utils/runtimeAbiEncoding";
import type { BaseInstructionsParams, ComposabilityParams } from "../build";
/**
 * Parameters for building a raw composable instruction
 */
export type BuildRawComposableParameters = {
    to: Address | RuntimeValue;
    calldata: Hex;
    chainId: number;
    gasLimit?: bigint;
    value?: bigint | RuntimeValue;
    metadata?: InstructionMetadata[];
};
/**
 * Builds an instruction for raw composable transaction. This is a generic function which creates the raw composable instructions
 * to execute against composability stack
 *
 * @param baseParams - Base configuration for the instruction
 * @param baseParams.account - The account that will execute the composable transaction
 * @param baseParams.currentInstructions - Optional array of existing instructions to append to
 * @param parameters - Parameters for generate composable instruction
 * @param parameters.to - Address of the target contract address
 * @param parameters.calldata - Raw calldata of the solidity function call
 * @param parameters.chainId - Chain where the composable transaction will be executed
 * @param [parameters.gasLimit] - Optional gas limit
 * @param [parameters.value] - Optional value
 *
 * @returns Promise resolving to array of instructions
 *
 * @example
 * ```typescript
 * const instructions = buildRawComposable(
 *   { accountAddress: '0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' },
 *   {
 *     to: targetContractAddress,
 *     calldata: '0x000000',
 *     chainId: baseSepolia.id
 *   }
 * )
 * ```
 */
export declare const buildRawComposable: (baseParams: BaseInstructionsParams, parameters: BuildRawComposableParameters, composabilityParameters: ComposabilityParams) => Promise<Instruction[]>;
export default buildRawComposable;
//# sourceMappingURL=buildRawComposable.d.ts.map