import { type Address, type Hex } from "viem";
import { MEEVersion } from "../../constants";
import type { GenericModuleConfig, PrevalidationHookModuleConfig } from "../toNexusAccount";
export type GetFactoryDataParams = {
    /** Account index for deterministic deployment */
    index: bigint;
    initData: Hex;
};
export declare const getFactoryData: (parameters: GetFactoryDataParams) => Hex;
export type GetInitDataWithRegistryParams = {
    bootStrapAddress: Address;
    validators: GenericModuleConfig[];
    registryAddress: Address;
    attesters: Address[];
    attesterThreshold: number;
    meeVersion: MEEVersion;
};
export declare const getInitDataWithRegistry: (params: GetInitDataWithRegistryParams) => Hex;
export type GetInitDataNoRegistryParams = {
    defaultValidator: GenericModuleConfig;
    prevalidationHooks: PrevalidationHookModuleConfig[];
    validators: GenericModuleConfig[];
    executors: GenericModuleConfig[];
    hook: GenericModuleConfig;
    fallbacks: GenericModuleConfig[];
    bootStrapAddress: Address;
};
export declare const getInitDataNoRegistry: (params: GetInitDataNoRegistryParams) => Hex;
//# sourceMappingURL=getFactoryData.d.ts.map