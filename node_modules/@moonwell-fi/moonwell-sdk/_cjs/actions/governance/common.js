"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMerklRewardsData = getMerklRewardsData;
exports.getMerklStakingApr = getMerklStakingApr;
const fetch_headers_js_1 = require("../../common/fetch-headers.js");
async function getMerklRewardsData(campaignId, chainId, account) {
    try {
        const response = await fetch(`https://api.merkl.xyz/v4/users/${account}/rewards?chainId=${chainId}&test=false&breakdownPage=0&reloadChainId=${chainId}`, {
            headers: fetch_headers_js_1.MOONWELL_FETCH_JSON_HEADERS,
        });
        if (!response.ok) {
            console.warn(`Merkl API request failed: ${response.status} ${response.statusText}`);
            return [];
        }
        const data = (await response.json());
        return data
            .filter((reward) => reward.rewards.some((r) => r.breakdowns.some((b) => campaignId.includes(b.campaignId))))
            .flatMap((reward) => reward.rewards
            .filter((r) => r.breakdowns.some((b) => campaignId.includes(b.campaignId)))
            .flatMap((r) => r.breakdowns
            .filter((b) => campaignId.includes(b.campaignId))
            .map((b) => ({
            chain: reward.chain.id,
            token: r.token,
            amount: b.amount,
            claimed: b.claimed,
            pending: b.pending,
        }))));
    }
    catch (error) {
        console.error("Error in getMerklRewardsData:", error);
        return [];
    }
}
async function getMerklStakingApr(campaignId) {
    try {
        const response = await fetch(`https://api.merkl.xyz/v4/campaigns?campaignId=${campaignId}`, {
            headers: fetch_headers_js_1.MOONWELL_FETCH_JSON_HEADERS,
        });
        if (!response.ok) {
            console.warn(`Merkl API request failed: ${response.status} ${response.statusText}`);
            return 0;
        }
        const data = (await response.json());
        return data.reduce((acc, curr) => acc + Number(curr.apr), 0);
    }
    catch (error) {
        console.error("Error in getMerklStakingApr:", error);
        return 0;
    }
}
//# sourceMappingURL=common.js.map