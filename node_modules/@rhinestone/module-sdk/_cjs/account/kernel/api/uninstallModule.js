"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.uninstallModule = void 0;
const viem_1 = require("viem");
const isModuleInstalled_1 = require("./isModuleInstalled");
const abis_1 = require("../constants/abis");
const types_1 = require("../types");
const uninstallModule = ({ client, account, module, }) => {
    switch (module.type) {
        case 'validator':
        case 'executor':
        case 'hook':
        case 'policy':
        case 'signer':
            return _uninstallModule({ client, account, module });
        case 'fallback':
            return _uninstallFallback({ client, account, module });
        default:
            throw new Error(`Unknown module type ${module.type}`);
    }
};
exports.uninstallModule = uninstallModule;
const _uninstallModule = async ({ client, account, module, }) => {
    const executions = [];
    const isInstalled = await (0, isModuleInstalled_1.isModuleInstalled)({ client, account, module });
    if (isInstalled) {
        const data = (0, viem_1.encodeFunctionData)({
            functionName: 'uninstallModule',
            abi: (0, viem_1.parseAbi)(abis_1.accountAbi),
            args: [
                BigInt(types_1.kernelModuleTypeIds[module.type]),
                module.module,
                module.deInitData,
            ],
        });
        executions.push({
            to: account.address,
            target: account.address,
            value: BigInt(0),
            callData: data,
            data,
        });
    }
    return executions;
};
const _uninstallFallback = async ({ client, account, module, }) => {
    const executions = [];
    const isInstalled = await (0, isModuleInstalled_1.isModuleInstalled)({
        client,
        account,
        module: {
            ...module,
            initData: (0, viem_1.encodeAbiParameters)([{ name: 'functionSignature', type: 'bytes4' }], [module.selector]) || '0x',
        },
    });
    if (isInstalled) {
        const data = (0, viem_1.encodeFunctionData)({
            functionName: 'uninstallModule',
            abi: (0, viem_1.parseAbi)(abis_1.accountAbi),
            args: [
                BigInt(types_1.kernelModuleTypeIds[module.type]),
                module.module,
                (0, viem_1.encodePacked)(['bytes4', 'bytes'], [module.selector, module.deInitData]),
            ],
        });
        executions.push({
            to: account.address,
            target: account.address,
            value: BigInt(0),
            callData: data,
            data,
        });
    }
    return executions;
};
//# sourceMappingURL=uninstallModule.js.map