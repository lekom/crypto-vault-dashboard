"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isModuleInstalled = void 0;
const viem_1 = require("viem");
const types_1 = require("../../../module/types");
const utils_1 = require("../../../common/utils");
const abis_1 = require("../constants/abis");
const isModuleInstalled = async ({ client, account, module, }) => {
    switch (module.type) {
        case 'validator':
        case 'executor':
        case 'hook':
            return await _isModuleInstalled({ client, account, module });
        case 'fallback':
            if (!module.selector) {
                throw new Error(`Selector param is required for module type ${module.type}`);
            }
            return await _isModuleInstalled({ client, account, module });
        default:
            throw new Error(`Unknown module type ${module.type}`);
    }
};
exports.isModuleInstalled = isModuleInstalled;
const _isModuleInstalled = async ({ client, account, module, }) => {
    try {
        if (await (0, utils_1.isContract)({ client, address: account.address })) {
            return (await client.readContract({
                address: account.address,
                abi: (0, viem_1.parseAbi)(abis_1.accountAbi),
                functionName: 'isModuleInstalled',
                args: [
                    types_1.moduleTypeIds[module.type],
                    module.module,
                    module.selector
                        ? (0, viem_1.encodeAbiParameters)([{ name: 'functionSignature', type: 'bytes4' }], [module.selector])
                        : '0x',
                ],
            }));
        }
        return false;
    }
    catch (e) {
        return false;
    }
};
//# sourceMappingURL=isModuleInstalled.js.map