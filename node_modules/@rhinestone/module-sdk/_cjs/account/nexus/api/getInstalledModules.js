"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getInstalledModules = void 0;
const viem_1 = require("viem");
const account_1 = require("../../../common/queries/account");
const abis_1 = require("../constants/abis");
const constants_1 = require("../../../common/constants");
const getInstalledModules = async ({ account, client, }) => {
    let installedModules = [];
    try {
        installedModules = await (0, account_1.getInstalledModules)({
            account,
            client,
        });
    }
    catch (e) { }
    if (installedModules.length === 0) {
        const installedValidators = (await client.readContract({
            address: account.address,
            abi: (0, viem_1.parseAbi)(abis_1.accountAbi),
            functionName: 'getValidatorsPaginated',
            args: [constants_1.SENTINEL_ADDRESS, 100],
        }));
        for (const validator of installedValidators) {
            installedModules.push(validator);
        }
        const installedExecutors = (await client.readContract({
            address: account.address,
            abi: (0, viem_1.parseAbi)(abis_1.accountAbi),
            functionName: 'getExecutorsPaginated',
            args: [constants_1.SENTINEL_ADDRESS, 100],
        }));
        for (const executor of installedExecutors) {
            installedModules.push(executor);
        }
        const installedHook = (await client.readContract({
            address: account.address,
            abi: (0, viem_1.parseAbi)(abis_1.accountAbi),
            functionName: 'getActiveHook',
        }));
        if (installedHook != viem_1.zeroAddress) {
            installedModules.push(installedHook);
        }
    }
    return installedModules;
};
exports.getInstalledModules = getInstalledModules;
//# sourceMappingURL=getInstalledModules.js.map