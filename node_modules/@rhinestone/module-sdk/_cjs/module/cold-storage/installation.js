"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAllowedCallbackSenders = exports.getColdStorageHook = void 0;
const viem_1 = require("viem");
const account_1 = require("../../account");
const constants_1 = require("../../constants");
const getColdStorageHook = async ({ account, client, waitPeriod, owner, moduleType, hook, }) => {
    const installedModules = await (0, account_1.getInstalledModules)({ account, client });
    const initData = installedModules.includes(constants_1.GLOBAL_CONSTANTS.COLD_STORAGE_HOOK_ADDRESS)
        ? '0x'
        : (0, viem_1.encodePacked)(['uint128', 'address'], [BigInt(waitPeriod), owner]);
    return {
        address: constants_1.GLOBAL_CONSTANTS.COLD_STORAGE_HOOK_ADDRESS,
        module: constants_1.GLOBAL_CONSTANTS.COLD_STORAGE_HOOK_ADDRESS,
        initData,
        deInitData: '0x',
        additionalContext: '0x',
        type: moduleType,
        hook,
    };
};
exports.getColdStorageHook = getColdStorageHook;
const getAllowedCallbackSenders = ({ addresses, functionSig, callType, selector, hook, }) => {
    return {
        address: constants_1.GLOBAL_CONSTANTS.COLD_STORAGE_FLASHLOAN_ADDRESS,
        module: constants_1.GLOBAL_CONSTANTS.COLD_STORAGE_FLASHLOAN_ADDRESS,
        initData: (0, viem_1.encodeAbiParameters)([{ internalType: 'address[]', name: 'addresses', type: 'address[]' }], [addresses]),
        deInitData: '0x',
        functionSig,
        additionalContext: '0x',
        selector,
        hook,
        callType,
        type: 'fallback',
    };
};
exports.getAllowedCallbackSenders = getAllowedCallbackSenders;
//# sourceMappingURL=installation.js.map