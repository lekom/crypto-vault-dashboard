"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRemoveHookAction = exports.getAddHookAction = exports.getHooks = void 0;
const viem_1 = require("viem");
const abi_1 = require("./abi");
const constants_1 = require("../../constants");
const getHooks = async ({ account, client, }) => {
    try {
        const hooks = (await client.readContract({
            address: constants_1.GLOBAL_CONSTANTS.HOOK_MULTI_PLEXER_ADDRESS,
            abi: abi_1.abi,
            functionName: 'getHooks',
            args: [account.address],
        }));
        return hooks;
    }
    catch (err) {
        console.error(err);
        return [];
    }
};
exports.getHooks = getHooks;
const getAddHookAction = ({ hook, hookType, sig, }) => {
    try {
        const data = (0, viem_1.encodeFunctionData)({
            functionName: sig ? 'addSigHook' : 'addHook',
            abi: abi_1.abi,
            args: sig ? [hook, sig, hookType] : [hook, hookType],
        });
        return {
            to: constants_1.GLOBAL_CONSTANTS.HOOK_MULTI_PLEXER_ADDRESS,
            target: constants_1.GLOBAL_CONSTANTS.HOOK_MULTI_PLEXER_ADDRESS,
            value: BigInt(0),
            callData: data,
            data,
        };
    }
    catch {
        throw new Error(`Failed to add hook ${hook}`);
    }
};
exports.getAddHookAction = getAddHookAction;
const getRemoveHookAction = ({ hook, hookType, sig, }) => {
    try {
        const data = (0, viem_1.encodeFunctionData)({
            functionName: sig ? 'removeSigHook' : 'removeHook',
            abi: abi_1.abi,
            args: sig ? [hook, sig, hookType] : [hook, hookType],
        });
        return {
            to: constants_1.GLOBAL_CONSTANTS.HOOK_MULTI_PLEXER_ADDRESS,
            target: constants_1.GLOBAL_CONSTANTS.HOOK_MULTI_PLEXER_ADDRESS,
            value: BigInt(0),
            callData: data,
            data,
        };
    }
    catch {
        throw new Error(`Failed to remove hook ${hook}`);
    }
};
exports.getRemoveHookAction = getRemoveHookAction;
//# sourceMappingURL=usage.js.map