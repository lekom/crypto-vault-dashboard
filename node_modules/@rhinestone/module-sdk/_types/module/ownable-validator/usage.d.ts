import { Execution } from '../../account';
import { Address, PublicClient, Hex } from 'viem';
import { Account } from '../../account';
export declare const getSetOwnableValidatorThresholdAction: ({ threshold, }: {
    threshold: number;
}) => Execution;
export declare const getAddOwnableValidatorOwnerAction: ({ owner, client, account, }: {
    owner: Address;
    client: PublicClient;
    account: Account;
}) => Promise<Execution>;
export declare const getRemoveOwnableValidatorOwnerAction: ({ client, account, owner, }: {
    client: PublicClient;
    account: Account;
    owner: Address;
}) => Promise<Execution>;
export declare const getOwnableValidatorOwners: ({ account, client, }: {
    account: Account;
    client: PublicClient;
}) => Promise<Address[]>;
export declare const getOwnableValidatorThreshold: ({ account, client, }: {
    account: Account;
    client: PublicClient;
}) => Promise<number>;
export declare const getIsValidSignatureStateless: ({ hash, signature, data, client, }: {
    hash: Hex;
    signature: Hex;
    data: Hex;
    client: PublicClient;
}) => Promise<number>;
export declare const encodeValidationData: ({ threshold, owners, }: {
    threshold: number;
    owners: Address[];
}) => `0x${string}`;
export declare const getOwnableValidatorSignature: ({ signatures, }: {
    signatures: Hex[];
}) => Hex;
export declare const getOwnableValidatorMockSignature: ({ threshold, }: {
    threshold: number;
}) => Hex;
//# sourceMappingURL=usage.d.ts.map