export declare const abi: readonly [{
    readonly type: "constructor";
    readonly inputs: readonly [{
        readonly name: "verifier";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "dkimRegistry";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "emailAuthImpl";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "commandHandler";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "minimumDelay";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "killSwitchAuthorizer";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "CANCEL_EXPIRED_RECOVERY_COOLDOWN";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "MAX_VALIDATORS";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "MINIMUM_RECOVERY_WINDOW";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "acceptanceCommandTemplates";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "string[][]";
        readonly internalType: "string[][]";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "addGuardian";
    readonly inputs: readonly [{
        readonly name: "guardian";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "weight";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "allowValidatorRecovery";
    readonly inputs: readonly [{
        readonly name: "validator";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "isInstalledContext";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }, {
        readonly name: "recoverySelector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "canStartRecoveryRequest";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "validator";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bool";
        readonly internalType: "bool";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "cancelExpiredRecovery";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "cancelRecovery";
    readonly inputs: readonly [];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "changeThreshold";
    readonly inputs: readonly [{
        readonly name: "threshold";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "commandHandler";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "completeRecovery";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "recoveryData";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "computeAcceptanceTemplateId";
    readonly inputs: readonly [{
        readonly name: "templateIdx";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "pure";
}, {
    readonly type: "function";
    readonly name: "computeEmailAuthAddress";
    readonly inputs: readonly [{
        readonly name: "recoveredAccount";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "accountSalt";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "computeRecoveryTemplateId";
    readonly inputs: readonly [{
        readonly name: "templateIdx";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "pure";
}, {
    readonly type: "function";
    readonly name: "disallowValidatorRecovery";
    readonly inputs: readonly [{
        readonly name: "validator";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "prevValidator";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "recoverySelector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "dkim";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "dkimAddr";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "emailAuthImplementation";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "emailAuthImplementationAddr";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "extractRecoveredAccountFromAcceptanceCommand";
    readonly inputs: readonly [{
        readonly name: "commandParams";
        readonly type: "bytes[]";
        readonly internalType: "bytes[]";
    }, {
        readonly name: "templateIdx";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "extractRecoveredAccountFromRecoveryCommand";
    readonly inputs: readonly [{
        readonly name: "commandParams";
        readonly type: "bytes[]";
        readonly internalType: "bytes[]";
    }, {
        readonly name: "templateIdx";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getAllGuardians";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address[]";
        readonly internalType: "address[]";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getAllowedSelectors";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bytes4[]";
        readonly internalType: "bytes4[]";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getAllowedValidators";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address[]";
        readonly internalType: "address[]";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getGuardian";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "guardian";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "tuple";
        readonly internalType: "struct GuardianStorage";
        readonly components: readonly [{
            readonly name: "status";
            readonly type: "uint8";
            readonly internalType: "enum GuardianStatus";
        }, {
            readonly name: "weight";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getGuardianConfig";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "tuple";
        readonly internalType: "struct IGuardianManager.GuardianConfig";
        readonly components: readonly [{
            readonly name: "guardianCount";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "totalWeight";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "acceptedWeight";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "threshold";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getPreviousRecoveryRequest";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "tuple";
        readonly internalType: "struct IEmailRecoveryManager.PreviousRecoveryRequest";
        readonly components: readonly [{
            readonly name: "previousGuardianInitiated";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "cancelRecoveryCooldown";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getRecoveryConfig";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "tuple";
        readonly internalType: "struct IEmailRecoveryManager.RecoveryConfig";
        readonly components: readonly [{
            readonly name: "delay";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "expiry";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getRecoveryRequest";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [{
        readonly name: "executeAfter";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "executeBefore";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "currentWeight";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "recoveryDataHash";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "handleAcceptance";
    readonly inputs: readonly [{
        readonly name: "emailAuthMsg";
        readonly type: "tuple";
        readonly internalType: "struct EmailAuthMsg";
        readonly components: readonly [{
            readonly name: "templateId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "commandParams";
            readonly type: "bytes[]";
            readonly internalType: "bytes[]";
        }, {
            readonly name: "skippedCommandPrefix";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "proof";
            readonly type: "tuple";
            readonly internalType: "struct EmailProof";
            readonly components: readonly [{
                readonly name: "domainName";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "publicKeyHash";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "timestamp";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "maskedCommand";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "emailNullifier";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "accountSalt";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "isCodeExist";
                readonly type: "bool";
                readonly internalType: "bool";
            }, {
                readonly name: "proof";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }];
        }];
    }, {
        readonly name: "templateIdx";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "handleRecovery";
    readonly inputs: readonly [{
        readonly name: "emailAuthMsg";
        readonly type: "tuple";
        readonly internalType: "struct EmailAuthMsg";
        readonly components: readonly [{
            readonly name: "templateId";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "commandParams";
            readonly type: "bytes[]";
            readonly internalType: "bytes[]";
        }, {
            readonly name: "skippedCommandPrefix";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "proof";
            readonly type: "tuple";
            readonly internalType: "struct EmailProof";
            readonly components: readonly [{
                readonly name: "domainName";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "publicKeyHash";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "timestamp";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "maskedCommand";
                readonly type: "string";
                readonly internalType: "string";
            }, {
                readonly name: "emailNullifier";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "accountSalt";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "isCodeExist";
                readonly type: "bool";
                readonly internalType: "bool";
            }, {
                readonly name: "proof";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }];
        }];
    }, {
        readonly name: "templateIdx";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "hasGuardianVoted";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "guardian";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bool";
        readonly internalType: "bool";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "isActivated";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bool";
        readonly internalType: "bool";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "isInitialized";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bool";
        readonly internalType: "bool";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "isModuleType";
    readonly inputs: readonly [{
        readonly name: "typeID";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bool";
        readonly internalType: "bool";
    }];
    readonly stateMutability: "pure";
}, {
    readonly type: "function";
    readonly name: "killSwitchEnabled";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "bool";
        readonly internalType: "bool";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "minimumDelay";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "name";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "string";
        readonly internalType: "string";
    }];
    readonly stateMutability: "pure";
}, {
    readonly type: "function";
    readonly name: "onInstall";
    readonly inputs: readonly [{
        readonly name: "data";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "onUninstall";
    readonly inputs: readonly [{
        readonly name: "";
        readonly type: "bytes";
        readonly internalType: "bytes";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "owner";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "recoveryCommandTemplates";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "string[][]";
        readonly internalType: "string[][]";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "removeGuardian";
    readonly inputs: readonly [{
        readonly name: "guardian";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "renounceOwnership";
    readonly inputs: readonly [];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "toggleKillSwitch";
    readonly inputs: readonly [];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "transferOwnership";
    readonly inputs: readonly [{
        readonly name: "newOwner";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "updateRecoveryConfig";
    readonly inputs: readonly [{
        readonly name: "recoveryConfig";
        readonly type: "tuple";
        readonly internalType: "struct IEmailRecoveryManager.RecoveryConfig";
        readonly components: readonly [{
            readonly name: "delay";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "expiry";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }];
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "validatorCount";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [{
        readonly name: "count";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "verifier";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "verifierAddr";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "version";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "string";
        readonly internalType: "string";
    }];
    readonly stateMutability: "pure";
}, {
    readonly type: "event";
    readonly name: "AddedGuardian";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "guardian";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "weight";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "ChangedThreshold";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "threshold";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "GuardianAccepted";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "guardian";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "GuardianStatusUpdated";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "guardian";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "newStatus";
        readonly type: "uint8";
        readonly indexed: false;
        readonly internalType: "enum GuardianStatus";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "GuardianVoted";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "guardian";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "currentWeight";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }, {
        readonly name: "guardianWeight";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "NewValidatorRecovery";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "validator";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "recoverySelector";
        readonly type: "bytes4";
        readonly indexed: false;
        readonly internalType: "bytes4";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "OwnershipTransferred";
    readonly inputs: readonly [{
        readonly name: "previousOwner";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "newOwner";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "RecoveryCancelled";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "RecoveryCompleted";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "RecoveryConfigUpdated";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "delay";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }, {
        readonly name: "expiry";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "RecoveryConfigured";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "guardianCount";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }, {
        readonly name: "totalWeight";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }, {
        readonly name: "threshold";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "RecoveryDeInitialized";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "RecoveryExecuted";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "validator";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "RecoveryRequestComplete";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "guardian";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "executeAfter";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }, {
        readonly name: "executeBefore";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }, {
        readonly name: "recoveryDataHash";
        readonly type: "bytes32";
        readonly indexed: false;
        readonly internalType: "bytes32";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "RecoveryRequestStarted";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "guardian";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "executeBefore";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }, {
        readonly name: "recoveryDataHash";
        readonly type: "bytes32";
        readonly indexed: false;
        readonly internalType: "bytes32";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "RemovedGuardian";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "guardian";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "weight";
        readonly type: "uint256";
        readonly indexed: false;
        readonly internalType: "uint256";
    }];
    readonly anonymous: false;
}, {
    readonly type: "event";
    readonly name: "RemovedValidatorRecovery";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "validator";
        readonly type: "address";
        readonly indexed: true;
        readonly internalType: "address";
    }, {
        readonly name: "recoverySelector";
        readonly type: "bytes4";
        readonly indexed: false;
        readonly internalType: "bytes4";
    }];
    readonly anonymous: false;
}, {
    readonly type: "error";
    readonly name: "AccountNotConfigured";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "AddressAlreadyGuardian";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "AddressNotGuardianForAccount";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "AlreadyInitialized";
    readonly inputs: readonly [{
        readonly name: "smartAccount";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "DelayLessThanMinimumDelay";
    readonly inputs: readonly [{
        readonly name: "delay";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "minimumDelay";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
}, {
    readonly type: "error";
    readonly name: "DelayMoreThanExpiry";
    readonly inputs: readonly [{
        readonly name: "delay";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "expiry";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
}, {
    readonly type: "error";
    readonly name: "DelayNotPassed";
    readonly inputs: readonly [{
        readonly name: "blockTimestamp";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "executeAfter";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
}, {
    readonly type: "error";
    readonly name: "GuardianAlreadyVoted";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "GuardianMustWaitForCooldown";
    readonly inputs: readonly [{
        readonly name: "guardian";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "IncorrectNumberOfWeights";
    readonly inputs: readonly [{
        readonly name: "guardianCount";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "weightCount";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
}, {
    readonly type: "error";
    readonly name: "InvalidAccountAddress";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidCommandHandler";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidDkimRegistry";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidEmailAuthImpl";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidFactory";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidGuardianAddress";
    readonly inputs: readonly [{
        readonly name: "guardian";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "InvalidGuardianStatus";
    readonly inputs: readonly [{
        readonly name: "guardianStatus";
        readonly type: "uint8";
        readonly internalType: "enum GuardianStatus";
    }, {
        readonly name: "expectedGuardianStatus";
        readonly type: "uint8";
        readonly internalType: "enum GuardianStatus";
    }];
}, {
    readonly type: "error";
    readonly name: "InvalidGuardianWeight";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidKillSwitchAuthorizer";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidOnInstallData";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidProxyBytecodeHash";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "InvalidRecoveryDataHash";
    readonly inputs: readonly [{
        readonly name: "recoveryDataHash";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }, {
        readonly name: "expectedRecoveryDataHash";
        readonly type: "bytes32";
        readonly internalType: "bytes32";
    }];
}, {
    readonly type: "error";
    readonly name: "InvalidSelector";
    readonly inputs: readonly [{
        readonly name: "selector";
        readonly type: "bytes4";
        readonly internalType: "bytes4";
    }];
}, {
    readonly type: "error";
    readonly name: "InvalidValidator";
    readonly inputs: readonly [{
        readonly name: "validator";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "InvalidVerifier";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "KillSwitchEnabled";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "LinkedList_AlreadyInitialized";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "LinkedList_EntryAlreadyInList";
    readonly inputs: readonly [{
        readonly name: "entry";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "LinkedList_InvalidEntry";
    readonly inputs: readonly [{
        readonly name: "entry";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "LinkedList_InvalidPage";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "MaxNumberOfGuardiansReached";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "MaxValidatorsReached";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "NoRecoveryConfigured";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "NoRecoveryInProcess";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "NotEnoughApprovals";
    readonly inputs: readonly [{
        readonly name: "currentWeight";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "threshold";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
}, {
    readonly type: "error";
    readonly name: "NotInitialized";
    readonly inputs: readonly [{
        readonly name: "smartAccount";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "OwnableInvalidOwner";
    readonly inputs: readonly [{
        readonly name: "owner";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "OwnableUnauthorizedAccount";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "RecoveryHasNotExpired";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "blockTimestamp";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "executeBefore";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
}, {
    readonly type: "error";
    readonly name: "RecoveryInProcess";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "RecoveryIsNotActivated";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "RecoveryModuleNotInitialized";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "RecoveryRequestExpired";
    readonly inputs: readonly [{
        readonly name: "blockTimestamp";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "executeBefore";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
}, {
    readonly type: "error";
    readonly name: "RecoveryWindowTooShort";
    readonly inputs: readonly [{
        readonly name: "recoveryWindow";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
}, {
    readonly type: "error";
    readonly name: "SetupAlreadyCalled";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "SetupNotCalled";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "StatusCannotBeTheSame";
    readonly inputs: readonly [{
        readonly name: "newStatus";
        readonly type: "uint8";
        readonly internalType: "enum GuardianStatus";
    }];
}, {
    readonly type: "error";
    readonly name: "ThresholdCannotBeZero";
    readonly inputs: readonly [];
}, {
    readonly type: "error";
    readonly name: "ThresholdExceedsAcceptedWeight";
    readonly inputs: readonly [{
        readonly name: "threshold";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "acceptedWeight";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
}, {
    readonly type: "error";
    readonly name: "ThresholdExceedsTotalWeight";
    readonly inputs: readonly [{
        readonly name: "threshold";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }, {
        readonly name: "totalWeight";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
}, {
    readonly type: "error";
    readonly name: "TooManyValuesToRemove";
    readonly inputs: readonly [];
}];
//# sourceMappingURL=abi.d.ts.map