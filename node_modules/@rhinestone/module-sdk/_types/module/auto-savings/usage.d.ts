import { Address, PublicClient } from 'viem';
import { Execution } from '../../account';
import { Account } from '../../account';
type Params = {
    token: Address;
    config: {
        percentage: bigint;
        vault: Address;
    };
};
export declare const getSetAutoSavingConfigAction: ({ token, config, }: Params) => Execution;
export declare const getAutoSavingTokens: ({ account, client, }: {
    account: Account;
    client: PublicClient;
}) => Promise<Address[]>;
export declare const getDeleteAutoSavingConfigAction: ({ account, client, token, }: {
    account: Account;
    client: PublicClient;
    token: Address;
}) => Promise<Execution>;
export declare const getAutoSaveAction: ({ token, amountReceived, }: {
    token: Address;
    amountReceived: number;
}) => Execution;
export type ConfigType = [bigint, Address];
export declare const getAutoSavingAccountTokenConfig: ({ client, account, token, }: {
    client: PublicClient;
    account: Account;
    token: Address;
}) => Promise<ConfigType>;
export {};
//# sourceMappingURL=usage.d.ts.map